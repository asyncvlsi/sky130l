namespace syn {
  export
  template<pbool I>
  defcell var_one_bit(bool? wt, wf; bool! dt, df; bool? Reset) {
    prs * {
      /* write port */
      wf<8> -> dt-
      wt<8> -> df-

      /* hold state */
      [iskeeper=1] df<8> -> dt-
      [iskeeper=1] dt<8> -> df-
      [weak=1] ~dt<4,4> -> df+
      [weak=1] ~df<4,4> -> dt+
    }
    [
      I ->
      prs {
        Reset<8> -> df-
      }
    [] else ->
      prs {
        Reset<8> -> dt-
      }
    ]
  }
}

namespace cell {

export defcell g0n1n2naa_01ox0 (bool? in[3]; bool! out)
{
   prs * {
   in[0]<5> | in[1]<5> -> out-
   ~in[0]<18> & ~in[1]<18> & ~in[2]<18> -> out+
   }
}

export defcell g0n2na_01a23aox0 (bool? in[4]; bool! out)
{
   prs * {
   in[0]<10> & in[1]<10> | in[2]<10> & in[3]<10> -> out-
   ~in[0]<12> & ~in[2]<12> -> out+
   }
}

export defcell gac1x0 (bool? in[2]; bool! out)
{
   prs * {
   in[0]<10> & in[1]<10> -> out-
   ~in[0]<6> -> out+
   }
}

export defcell gac3x0 (bool? in[2]; bool! out)
{
   prs * {
   in[0]<5> -> out-
   ~in[0]<12> & ~in[1]<12> -> out+
   }
}

export defcell gcelem2x0 (bool? in[2]; bool! out)
{
   prs * {
   in[0]<10> & in[1]<10> -> out-
   ~in[0]<12> & ~in[1]<12> -> out+
   }
}

export defcell gcelem3x0 (bool? in[3]; bool! out)
{
   prs * {
   in[0]<15> & in[1]<15> & in[2]<15> -> out-
   ~in[0]<18> & ~in[1]<18> & ~in[2]<18> -> out+
   }
}

export defcell gffx0 (bool? in[2]; bool! out)
{
   prs * {
   in[1]<5> -> out-
   ~in[0]<6> -> out+
   }
}

export defcell ggc3n11x0 (bool? in[3]; bool! out)
{
   prs * {
   in[0]<15> & in[1]<15> & in[2]<15> -> out-
   ~in[0]<6> -> out+
   }
}

export defcell ggc3n12x0 (bool? in[3]; bool! out)
{
   prs * {
   in[0]<15> & in[1]<15> & in[2]<15> -> out-
   ~in[1]<6> -> out+
   }
}

export defcell ginvx0 (bool? in[1]; bool! out)
{
   prs * {
   in[0]<5> -> out-
   ~in[0]<8> -> out+
   }
}

export defcell ginvx1 (bool? in[1]; bool! out)
{
   prs * {
   in[0]<10> -> out-
   ~in[0]<15> -> out+
   }
}

export defcell ginvx2 (bool? in[1]; bool! out)
{
   prs * {
   in[0]<20> -> out-
   ~in[0]<30> -> out+
   }
}

export defcell ginvx3 (bool? in[1]; bool! out)
{
   prs * {
   in[0]<80;4> -> out-
   ~in[0]<121;4> -> out+
   }
}

export defcell ginvx4 (bool? in[1]; bool! out)
{
   prs * {
   in[0]<5> -> out-
   ~in[0]<6> -> out+
   }
}

export defcell ginvx5 (bool? in[1]; bool! out)
{
   prs * {
   in[0]<40;2> -> out-
   ~in[0]<60;2> -> out+
   }
}

export defcell ginvx6 (bool? in[1]; bool! out)
{
   prs * {
   in[0]<15> -> out-
   ~in[0]<23> -> out+
   }
}

export defcell ginvx7 (bool? in[1]; bool! out)
{
   prs * {
   in[0]<60;3> -> out-
   ~in[0]<91;3> -> out+
   }
}

export defcell gnand2x0 (bool? in[2]; bool! out)
{
   prs * {
   in[0]<10> & in[1]<10> -> out-
   ~(in[0]<6> & in[1]<6>) -> out+
   }
}

export defcell gnor2x0 (bool? in[2]; bool! out)
{
   prs * {
   in[0]<5> | in[1]<5> -> out-
   ~(in[0]<12> | in[1]<12>) -> out+
   }
}

export defcell gnor3x0 (bool? in[3]; bool! out)
{
   prs * {
   in[0]<5> | in[1]<5> | in[2]<5> -> out-
   ~(in[0]<18> | in[1]<18> | in[2]<18>) -> out+
   }
}

}
